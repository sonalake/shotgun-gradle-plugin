
buildscript {
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath 'org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1'
  }
}

plugins {
  id 'java-gradle-plugin'
  id "jacoco"
  id "org.sonarqube" version "2.8"
  id 'maven'
  id 'maven-publish'
}
apply from: "gradle/sonar.gradle"
apply plugin: 'maven-publish-auth'

repositories {
  jcenter()
  maven {

    url "http://atlanta:8081/nexus/content/groups/public"
  }
}

dependencies {
  implementation 'com.sonalake:shotgun:1.0.0-SNAPSHOT'
  implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'

  testImplementation 'junit:junit:4.12'
  testImplementation gradleTestKit()
}


gradlePlugin {
  plugins {
    shotgunPlugin {
      id = 'shotgun-gradle-plugin'
      displayName = 'Shotgun Plugin'
      description = 'Analyse git commit history to wark about hotspots'
      implementationClass = 'com.sonalake.shotgun.ShotgunGradlePlugin'
    }
  }
}

group = "com.sonalake"
version = "1.0.0-SNAPSHOT"

// Add a source set for the functional test suite
sourceSets {
  functionalTest {
  }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
task functionalTest(type: Test) {
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

check {
  // Run the functional tests as part of `check`
  dependsOn(tasks.functionalTest)
}



publishing {
  repositories {
    maven {
      def rootUrl = "http://atlanta.sonalake.corp:8081/nexus/content/repositories"
      name = version.endsWith("SNAPSHOT") ? 'snapshots' : 'releases'
      url "$rootUrl/$name"
      allowInsecureProtocol true
    }
  }
}
